version: '3'
services:
  mongodb:
    image: mongo:latest
    container_name: my-mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - my-network
    labels:
      - "com.example.tags=mongodb"
      
  spring-api:
    build:
      context: ./AnimalRegistry  # Specify the path to your Spring API Dockerfile
    #image: pavisu/puvs-ws2324:spring-api-latest
    container_name: my-app
    ports:
      - 8081:8081
    depends_on:
      - mongodb
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:example@mongodb:27017
      SPRING_DATA_MONGODB_DATABASE: animaldb
      OTEL_SERVICE_NAME: animalui-otel
      OTEL_TRACES_EXPORTER: jaeger
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://jaeger-service:14250
      #OTEL_RESOURCE_ATTRIBUTES: service.name=todobackend
    networks:
      - my-network
    labels:
      - "com.example.tags=spring-api"

  react-app:
    build:
      context: ./animalui  # Specify the path to your React app Dockerfile
    #image: pavisu/puvs-ws2324:react-app-latest
    container_name: react-app
    ports:
      - 3000:3000
    depends_on:
      - spring-api
    environment:
      #change here the URL of the springAPI
      REACT_APP_API_URL: https://friendly-computing-machine-r4gq9r7rx6wxcw54r-8081.app.github.dev
    networks:
      - my-network
    labels:
      - "com.example.tags=react-app"

  #collector:
   # image: otel/opentelemetry-collector:0.72.0
    #command: [ "--config=/etc/otel-collector-config.yml" ]
    #volumes:
     # - ./otel-config.yml:/etc/otel-collector-config.yml
    #ports:
     # - "4317:4317"
    #depends_on:
     # - jaeger-service
    #networks:
     # - my-network

  jaeger-service:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14250"
    networks:
      - my-network
    labels:
      - "com.example.tags=jaeger"

networks:
  my-network:
